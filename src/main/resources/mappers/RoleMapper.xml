<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swpu.uchain.openexperiment.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.swpu.uchain.openexperiment.domain.Role">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap id="RoleVOMap" type="com.swpu.uchain.openexperiment.VO.permission.RoleVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="TIMESTAMP" property="roleName" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.swpu.uchain.openexperiment.domain.Role">
    insert into role (id, create_time, `name`, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.swpu.uchain.openexperiment.domain.Role">
    update role
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      `name` = #{name,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, create_time, `name`, update_time
    from role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, create_time, `name`, update_time
    from role
  </select>
  <select id="selectByRoleName" resultMap="BaseResultMap">
    select * from role where `name` = #{roleName}
  </select>
  <select id="getRoles" resultMap="RoleVOMap">
    select role.id,role.name from role
    inner join user_role
    on user_role.role_id = role.id
    where user_role.user_id = #{userId}
  </select>
  <select id="selectByUserId" resultMap="BaseResultMap">
    select role.id, role.create_time, role.`name`, role.update_time
    from role
    inner join user_role
    on user_role.role_id = role.id
    where user_role.user_id = #{userId} limit 1
  </select>
  <select id="getUserRoles" resultMap="BaseResultMap">
    select role.id, role.create_time, role.`name`, role.update_time
    from role
    inner join user_role
    on user_role.role_id = role.id
    where user_role.user_id = #{userId} and user_role.role_id = #{roleId}
  </select>
</mapper>