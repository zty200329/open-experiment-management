<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swpu.uchain.openexperiment.mapper.UserProjectGroupMapper">
  <resultMap id="BaseResultMap" type="com.swpu.uchain.openexperiment.domain.UserProjectGroup">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_group_id" jdbcType="BIGINT" property="projectGroupId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="technical_role" jdbcType="VARCHAR" property="technicalRole" />
    <result column="work_division" jdbcType="VARCHAR" property="workDivision" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="member_role" jdbcType="INTEGER" property="memberRole" />
    <result column="personal_judge" jdbcType="VARCHAR" property="personalJudge" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from openexperiment.user_project_group
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByProjectGroupId">
    delete from openexperiment.user_project_group
    where project_group_id = #{projectGroupId}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.swpu.uchain.openexperiment.domain.UserProjectGroup">
  insert into openexperiment.user_project_group (id, project_group_id, user_id,
    technical_role, work_division, `status`,
    member_role, personal_judge, update_time,
    join_time)
  values (#{id,jdbcType=BIGINT}, #{projectGroupId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
    #{technicalRole,jdbcType=VARCHAR}, #{workDivision,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
    #{memberRole,jdbcType=INTEGER}, #{personalJudge,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
    #{joinTime,jdbcType=TIMESTAMP})
</insert>
  <update id="updateByPrimaryKey" parameterType="com.swpu.uchain.openexperiment.domain.UserProjectGroup">
    update openexperiment.user_project_group
    set 
        project_group_id = #{projectGroupId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT},
        technical_role = #{technicalRole,jdbcType=VARCHAR},
        work_division = #{workDivision,jdbcType=VARCHAR},
        `status` = #{status,jdbcType=INTEGER},
        member_role = #{memberRole,jdbcType=INTEGER},
        personal_judge = #{personalJudge,jdbcType=VARCHAR},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        join_time = #{joinTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <update id="updateUserInfo">
        update openexperiment.user_project_group
        set update_time = #{date},
        <trim suffixOverrides=",">
            <if test="technicalRole!=null">
                technical_role = #{stuMember.technicalRole,jdbcType=VARCHAR},
            </if>
            <if test="workDivision!=null">
                technical_role = #{stuMember.workDivision,jdbcType=VARCHAR},
            </if>
            <if test="personJudge!=null">
                personal_judge = #{stuMember.personJudge,jdbcType=VARCHAR},
            </if>
        </trim>
        <!--且角色不为教师-->
        where user_id = #{stuMember.userId} and member_role != 1 and project_group_id = #{projectId}
    </update>
    <update id="updateTeacherTechnicalRole">
        update openexperiment.user_project_group
            set technical_role = #{teacher.technicalRole},
                update_time = CURRENT_TIMESTAMP()
            where user_id = #{teacher.userId} and member_role = 1 and project_group_id = #{projectId}
    </update>
    <!--Mybatis不支持该语法-->
<!--    <update id="updateTeacherTechnicalRole">-->
<!--        <foreach collection="list" item="teacher" index="index">-->
<!--            update user_project_group-->
<!--              set technical_role = #{teacher.technicalRole},-->
<!--                  update_time = CURRENT_TIMESTAMP()-->
<!--            &lt;!&ndash;且角色为教师&ndash;&gt;-->
<!--            where user_id = #{teacher.userId} and member_role = 1 and project_group_id = #{teacher.projectId};-->
<!--        </foreach>-->
<!--    </update>-->


    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, project_group_id, user_id, technical_role, work_division, `status`, member_role, 
    personal_judge, update_time, join_time
    from openexperiment.user_project_group
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAllByUserId" resultMap="BaseResultMap">
    select id, project_group_id, user_id, technical_role, work_division, `status`, member_role, 
    personal_judge, update_time, join_time
    from openexperiment.user_project_group
    <where>
        <if test="userId!=null">
            user_id = #{userId}
        </if>
    </where>
  </select>
  <select id="selectByProjectGroupIdAndUserId" resultMap="BaseResultMap">
    select * from openexperiment.user_project_group where project_group_id = #{projectGroupId} and user_id = #{userId} limit 1
  </select>
  <select id="selectByProjectGroupId" resultMap="BaseResultMap">
    select id, project_group_id, user_id, technical_role, work_division, status, member_role, personal_judge, update_time, join_time from openexperiment.user_project_group where project_group_id = #{projectGroupId}
  </select>
  <select id="selectByProjectGroupIdAndJoinStatus" resultMap="BaseResultMap">
    select id, project_group_id, user_id, technical_role, work_division, status, member_role, personal_judge, update_time, join_time from openexperiment.user_project_group
    where  member_role != 1<!--1指的是指导教师-->
        <if test="param1!=null">
            and project_group_id = #{param1}
        </if>
        <if test="param2!=null">
            and status = #{param2}
        </if>

  </select>
  <select id="selectUserCodesByProjectGroupId" resultType="java.lang.String">
    select u_stu.code from openexperiment.user_project_group inner join openexperiment.u_stu on u_stu.id = user_project_group.user_id where user_project_group.project_group_id = #{projectGroupId}
  </select>
  <select id="selectProjectGroupIdByUserIdAndMemberRole" resultType="long">
    select project_group_id
        from openexperiment.user_project_group
        where user_id = #{userId} and member_role = #{memberRole}
  </select>
    <select id="selectStuCount" resultType="java.lang.Integer">
        select count(user_id) from openexperiment.user_project_group
        where project_group_id = #{projectId}
        and member_role != 1 <!--且角色不为指导教师-->
        <if test="status!=null">
            and status = #{status}
        </if>
    </select>
    <select id="selectUserMemberVOListByMemberRoleAndProjectId"
            resultType="com.swpu.uchain.openexperiment.VO.user.UserMemberVO">
        select
                user_project_group.user_id as userId,
                user_project_group.member_role as memberRole,
                u_stu.real_name as userName,
                u_stu.major as major,
                u_stu.grade as grade,
                u_stu.mobile_phone as phone
         from openexperiment.user_project_group inner join openexperiment.u_stu on user_project_group.user_id = u_stu.code
         where user_project_group.project_group_id = #{projectId}
            <if test="memberRole!=null">
                and user_project_group.member_role = #{memberRole}
            </if>
            <if test="status!=null">
                and user_project_group.status = #{status}
            </if>
    </select>
    <select id="getMemberAmountOfProject" resultType="java.lang.Integer">
        select count(user_id) from openexperiment.user_project_group where project_group_id = #{projectId} and status = 2
        <if test="memberRole!=null">
            and member_role = #{memberRole}
        </if>
    </select>
    <select id="geCountOfAppliedProject" resultType="java.lang.Integer">
        select count(project_group.id) from openexperiment.project_group
            inner join openexperiment.user_project_group on user_project_group.project_group_id = project_group.id
                and user_project_group.user_id = #{userId}
        where project_group.project_type = #{projectType}

    </select>
    <select id="selectByProjectIdAndUserId" resultMap="BaseResultMap"
            resultType="com.swpu.uchain.openexperiment.domain.UserProjectGroup">
        select id, project_group_id, user_id, technical_role, work_division, status, member_role, personal_judge, update_time, join_time
        from openexperiment.user_project_group
        <where>
            <if test="projectId!=null">
                project_group_id = #{projectId}
            </if>
            <if test="userId!=null">
                and user_id = #{userId}
            </if>
        </where>
    </select>
    <select id="getProjectLeader" resultMap="BaseResultMap"
            resultType="com.swpu.uchain.openexperiment.domain.UserProjectGroup">
        select id, project_group_id, user_id, technical_role, work_division, status, member_role, personal_judge, update_time, join_time
        from openexperiment.user_project_group
        <where>
            <if test="projectId!=null">
                project_group_id = #{projectId}
            </if>
            <if test="memberRole!=null">
                and member_role = #{memberRole}
            </if>
        </where>
    </select>
</mapper>