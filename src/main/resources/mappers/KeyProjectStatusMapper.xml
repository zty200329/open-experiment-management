<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swpu.uchain.openexperiment.mapper.KeyProjectStatusMapper">


    <resultMap id="ProjectReviewVOResultMap" type="com.swpu.uchain.openexperiment.VO.project.ProjectReviewVO">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="apply_funds" property="applyFunds"/>
        <result column="project_name" jdbcType="VARCHAR" property="projectName" />
        <result column="project_type" jdbcType="INTEGER" property="projectType" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="experiment_type" jdbcType="INTEGER" property="experimentType" />
        <result column="suggest_group_type" jdbcType="INTEGER" property="suggestGroupType" />
        <result column="subordinate_college" property="subordinateCollege"/>
        <result column="apply_funds" property="applyFunds"/>
        <result column="score" property="score"/>
        <result column="reason" property="reason"/>
        <result column="is_support" property="isSupport" />
    </resultMap>

    <insert id="insert">
        insert into openexperiment.key_project_status(project_id,`status`,subordinate_college,creator_id)
            values (#{projectId},#{status},#{college},#{creatorId})
    </insert>
        <update id="update">
        update openexperiment.key_project_status set `status` = #{status} where project_id = #{projectId}
    </update>
    <update id="updateList">
        update openexperiment.key_project_status set `status` = #{status}
            where project_id in
                  <foreach collection="list" item="projectId" open="(" close=")" separator=",">
                      #{projectId}
                  </foreach>
    </update>
    <delete id="deleteByProjectId">
        delete from openexperiment.key_project_status where project_id = #{projectId}
    </delete>
    <select id="getStatusByProjectId" resultType="java.lang.Integer">
        select status from openexperiment.key_project_status where project_id = #{projectId}
    </select>
    <select id="getCollegeByProjectId" resultType="java.lang.Integer">
        select subordinate_college from openexperiment.project_group where id = #{projectId}
    </select>
    <select id="selectKeyHasReview" resultMap="ProjectReviewVOResultMap">
        SELECT
	    project_group.end_time,
	    project_group.start_time,
	    project_group.subordinate_college,
	    project_group.experiment_type,
	    project_group.apply_funds,
	    project_group.project_type,
	    project_group.temp_serial_number,
	    project_group.total_hours,
	    project_group.project_name,
	    project_review.score,
	    project_review.is_support,
	    project_review.reason,
	    project_group.id,
	    key_project_status.project_id
        FROM
	    project_group
	    INNER JOIN
	    project_review
	    ON
	    	project_group.id = project_review.project_id
	    INNER JOIN
	    key_project_status
	    ON
	    	project_group.id = key_project_status.project_id
        WHERE
	    project_group.project_type = 2 AND
	    key_project_status.`status` = #{status}
        <if  test="college!=39">
            and project_group.subordinate_college = #{college}
        </if>

    </select>
    <select id="getKeyProjectDTOListByStatusAndCollege" resultType="com.swpu.uchain.openexperiment.DTO.KeyProjectDTO">
        SELECT
            key_project_status.project_id AS id,
            key_project_status.`status` AS status,
            key_project_status.create_time AS createTime,
            project_group.creator_id AS creatorId,
            project_group.end_time AS endTime,
            project_group.experiment_condition AS experimentCondition,
            project_group.suggest_group_type AS suggestGroupType,
            project_group.project_type as  projectType,
            project_group.experiment_type AS experimentType,
            project_group.achievement_check AS achievementCheck,
            project_group.fit_people_num AS fitPeopleNum,
            project_group.apply_funds AS applyFunds,
            project_group.project_name AS projectName,
            project_group.lab_name AS labName,
            project_group.address AS address,
            project_group.main_content AS mainContent,
            project_group.temp_serial_number AS serialNumber,
            project_group.limit_college AS limitCollege,
            project_group.limit_grade AS limitGrade,
            project_group.limit_major AS limitMajor,
            project_group.total_hours AS totalHours,
            project_group.start_time AS startTime,
            project_group.is_open_topic AS isOpenTopic,
            project_group.subordinate_college AS subordinateCollege,
            `u_stu`.real_name AS creatorName,
            `u_stu`.`code` AS userid,
            project_file.id AS projectFileId
        FROM
            openexperiment.key_project_status
        INNER JOIN openexperiment.project_group ON key_project_status.project_id = project_group.id
        left join openexperiment.`u_stu` ON key_project_status.creator_id = `u_stu`.`code`
        left join openexperiment.project_file ON project_file.project_group_id = key_project_status.project_id
        <where>
            <if test="status!=null">
                and key_project_status.`status` = #{status}
            </if>
            <if test="college!=null">
                and project_group.subordinate_college = #{college}
            </if>
                and project_file.material_type = 1
        </where>

    </select>
    <select id="getKeyProjectDTOListByStatusAndCollege2" resultType="com.swpu.uchain.openexperiment.DTO.KeyProjectDTO">
        SELECT
        key_project_status.project_id AS id,
        key_project_status.`status` AS status,
        key_project_status.create_time AS createTime,
        project_group.creator_id AS creatorId,
        project_group.end_time AS endTime,
        project_group.experiment_condition AS experimentCondition,
        project_group.suggest_group_type AS suggestGroupType,
        project_group.project_type as  projectType,
        project_group.experiment_type AS experimentType,
        project_group.achievement_check AS achievementCheck,
        project_group.fit_people_num AS fitPeopleNum,
        project_group.apply_funds AS applyFunds,
        project_group.project_name AS projectName,
        project_group.lab_name AS labName,
        project_group.address AS address,
        project_group.main_content AS mainContent,
        project_group.temp_serial_number AS serialNumber,
        project_group.limit_college AS limitCollege,
        project_group.limit_grade AS limitGrade,
        project_group.limit_major AS limitMajor,
        project_group.total_hours AS totalHours,
        project_group.start_time AS startTime,
        project_group.is_open_topic AS isOpenTopic,
        project_group.subordinate_college AS subordinateCollege,
        `u_stu`.real_name AS creatorName,
        `u_stu`.`code` AS userid,
        project_file.id AS projectFileId
        FROM
        openexperiment.key_project_status
        INNER JOIN openexperiment.project_group ON key_project_status.project_id = project_group.id
        left join openexperiment.`u_stu` ON key_project_status.creator_id = `u_stu`.`code`
        left join openexperiment.project_file ON project_file.project_group_id = key_project_status.project_id
        <where>
                project_file.material_type = 1

                and key_project_status.`status` = 6

                or project_group.subordinate_college = 39
        </where>

    </select>
    <select id="getKeyProjectListByUserIdAndProjectStatus" resultType="com.swpu.uchain.openexperiment.DTO.KeyProjectDTO">
        SELECT
        DISTINCT
        key_project_status.project_id AS id,
        key_project_status.`status` AS status,
        key_project_status.create_time AS createTime,
        project_group.creator_id AS creatorId,
        project_group.end_time AS endTime,
        project_group.experiment_condition AS experimentCondition,
        project_group.suggest_group_type AS suggestGroupType,
        project_group.project_type as  projectType,
        project_group.experiment_type AS experimentType,
        project_group.achievement_check AS achievementCheck,
        project_group.fit_people_num AS fitPeopleNum,
        project_group.apply_funds AS applyFunds,
        project_group.project_name AS projectName,
        project_group.lab_name AS labName,
        project_group.address AS address,
        project_group.main_content AS mainContent,
        project_group.serial_number AS serialNumber,
        project_group.limit_college AS limitCollege,
        project_group.limit_grade AS limitGrade,
        project_group.limit_major AS limitMajor,
        project_group.total_hours AS totalHours,
        project_group.start_time AS startTime,
        project_group.is_open_topic AS isOpenTopic,
        `u_stu`.real_name AS creatorName,
        `u_stu`.`code` AS userid,
        project_file.id AS projectFileId
        FROM
            openexperiment.user_project_group,
            openexperiment.project_group
        INNER JOIN openexperiment.key_project_status ON project_group.id = key_project_status.project_id
        inner join openexperiment.u_stu on key_project_status.creator_id = u_stu.`code`
        inner join openexperiment.project_file on project_file.project_group_id = project_group.id
        WHERE
        `user_project_group`.`user_id` = #{userId}
        <if test="status!=null">
            and key_project_status.`status` = #{status}
        </if>
    </select>
    <select id="getCountOfSpecifiedStatusAndProjectProject" resultType="java.lang.Integer">
        select count(project_id) from openexperiment.key_project_status where `status` = #{status} and  subordinate_college = #{college}
    </select>


</mapper>

